{"version":3,"sources":["types/types.js","reducers/authReducer.js","reducers/calendarReducer.js","reducers/uiReducer.js","reducers/rootReducer.js","store/store.js","helpers/fetch.js","helpers/prepareEvents.js","actions/events.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/ui/NavBar.js","components/calendar/CalendarEvent.js","actions/ui.js","components/calendar/CalendarModal.js","components/ui/AddNewFab.js","components/ui/DeleteEventFab.js","components/calendar/CalendarScreen.js","router/PrivateRoute.js","router/PublicRoute.js","router/AppRouter.js","CalendarApp.js","index.js"],"names":["types","initialState","checking","events","activeEvent","modalOpen","rootReducer","combineReducers","ui","state","action","type","calendar","payload","map","e","id","filter","auth","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","baseUrl","process","fetchWithoutToken","endpoint","data","method","url","fetch","headers","body","JSON","stringify","fetchWithToken","token","localStorage","getItem","prepareEvents","start","moment","toDate","end","eventAddNew","event","eventClearActiveEvent","eventUpdated","eventDeleted","eventLoaded","checkingFinish","login","user","startLogout","dispatch","clear","logout","useForm","useState","values","setValues","reset","handleInputChange","target","name","value","LoginScreen","useDispatch","lEmail","lPassword","formLoginValues","handleLoginInputChange","rName","rEmail","rPassword1","rPassword2","formRegisterValues","handleRegisterInputChange","className","onSubmit","email","password","preventDefault","a","resp","json","ok","setItem","Date","getTime","uid","Swal","fire","msg","placeholder","onChange","NavBar","useSelector","onClick","CalendarEvent","title","uiOpenModal","customStyles","content","top","left","right","bottom","marginRight","transform","Modal","setAppElement","now","minutes","seconds","add","nowPlus1","clone","initEvent","notes","CalendarModal","dateStart","setDateStart","dateEnd","setDateEnd","titleValid","setTitleValid","formValues","setFormValues","useEffect","closeModal","isOpen","onRequestClose","style","closeTimeoutMS","overlayClassName","momentStart","momentEnd","isSameOrAfter","trim","length","console","log","getState","_id","eventStartAddNew","format","amPmAriaLabel","minDate","autoComplete","rows","AddNewFab","DeleteEventFab","localizer","momentLocalizer","CalendarScreen","lastView","setLastView","startAccessor","endAccessor","eventPropGetter","isSelected","backgroundColor","borderRadius","opacity","display","color","onDoubleClickEvent","onSelectEvent","onSelectSlot","selectable","onView","view","components","PrivateRoute","isAuthenticated","Component","component","rest","props","to","PublicRoute","AppRouter","exact","path","CalendarApp","ReactDOM","render","document","getElementById"],"mappings":"2MAAaA,EAEI,kBAFJA,EAGK,mBAHLA,EAKO,qBALPA,EAMI,uBANJA,EASI,kBATJA,EAUe,6BAVfA,EAWI,wBAXJA,EAYK,wBAZLA,EAaI,wBAbJA,EAgBW,qCAhBXA,EAkBE,eAlBFA,EAqBG,gBCnBVC,EAAe,CACjBC,UAAU,G,QCWRD,EAAe,CACjBE,OAAQ,GACRC,YAAa,MCdXH,EAAe,CACjBI,WAAW,GCEFC,EAAcC,YAAgB,CACvCC,GDAqB,WAAoC,IAAlCC,EAAiC,uDAAzBR,EAAcS,EAAW,uCAExD,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAGnB,KAAKL,EACD,OAAO,2BACAS,GADP,IAEIJ,WAAW,IAGnB,QACI,OAAOI,ICffG,SFY2B,WAAoC,IAAlCH,EAAiC,uDAAzBR,EAAcS,EAAW,uCAE9D,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,2BACAS,GADP,IAEIL,YAAaM,EAAOG,UAG5B,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIN,OAAO,GAAD,mBAAOM,EAAMN,QAAb,CAAqBO,EAAOG,YAG1C,KAAKb,EACD,OAAO,2BACAS,GADP,IAEIL,YAAa,OAGrB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOW,KACjB,SAAAC,GAAC,OAAKA,EAAEC,KAAON,EAAOG,QAAQG,GAAMN,EAAOG,QAAUE,OAIjE,KAAKf,EACD,OAAO,2BACAS,GADP,IAEIN,OAAQM,EAAMN,OAAOc,QACjB,SAAAF,GAAC,OAAKA,EAAEC,KAAOP,EAAML,YAAYY,MAErCZ,YAAa,OAGrB,KAAKJ,EACD,OAAO,2BACAS,GADP,IAEIN,OAAO,YAAMO,EAAOG,WAG5B,KAAKb,EACD,OAAO,eACAC,GAGX,QACI,OAAOQ,IE7DfS,KHAuB,WAAoC,IAAlCT,EAAiC,uDAAzBR,EAAcS,EAAW,uCAE1D,OAASA,EAAOC,MACZ,KAAKX,EACD,OAAO,uCACAS,GACAC,EAAOG,SAFd,IAGIX,UAAU,IAGlB,KAAKF,EACD,OAAO,2BACAS,GADP,IAEIP,UAAU,IAGlB,KAAKF,EACD,MAAO,CACHE,UAAU,GAGlB,QACI,OAAOO,MI1BbU,EAAsC,qBAAXC,QAA0BA,OAAOC,sCAAyCC,IAE9FC,EAAQC,YACjBlB,EACAa,EACIM,YAAiBC,O,yDCTnBC,EAAUC,kDAEVC,EAAoB,SAAEC,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAE3CC,EAAG,UAAON,EAAP,YAAoBG,GAE7B,MAAe,QAAXE,EACOE,MAAOD,GAEPC,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAWP,MAM5BQ,EAAiB,SAAET,EAAUC,GAA2B,IAArBC,EAAoB,uDAAX,MAExCC,EAAG,UAAON,EAAP,YAAoBG,GACvBU,EAAQC,aAAaC,QAAQ,UAAY,GAE/C,MAAe,QAAXV,EACOE,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,UAAWK,KAIZN,MAAOD,EAAK,CACfD,SACAG,QAAS,CACL,eAAgB,mBAChB,UAAWK,GAEfJ,KAAMC,KAAKC,UAAWP,M,iBCpCrBY,EAAgB,WAAmB,IAAlBxC,EAAiB,uDAAR,GAEnC,OAAOA,EAAOW,KACV,SAACC,GAAD,mBAAC,eACMA,GADP,IAEI6B,MAAOC,IAAQ9B,EAAE6B,OAAQE,SACzBC,IAAKF,IAAQ9B,EAAEgC,KAAMD,eCqB3BE,EAAc,SAAEC,GAAF,MAAc,CAC9BtC,KAAMX,EACNa,QAASoC,IAQAC,EAAwB,iBAAO,CACxCvC,KAAMX,IAuBJmD,EAAe,SAAEF,GAAF,MAAc,CAC/BtC,KAAMX,EACNa,QAASoC,IAyBPG,EAAe,iBAAO,CACxBzC,KAAMX,IAoBJqD,EAAc,SAAClD,GAAD,MAAa,CAC7BQ,KAAMX,EACNa,QAASV,IChDPmD,EAAiB,iBAAO,CAC1B3C,KAAMX,IAGJuD,EAAQ,SAAEC,GAAF,MAAa,CACvB7C,KAAMX,EACNa,QAAS2C,IAGAC,EAAc,WACvB,OAAO,SAAEC,GAELjB,aAAakB,QACbD,EDsC0B,CAC9B/C,KAAMX,ICtCF0D,EAAUE,OAIZA,EAAS,iBAAO,CAClBjD,KAAMX,I,gBCnFG6D,EAAU,WAA0B,IAAxB5D,EAAuB,uDAAR,GAEpC,EAA4B6D,mBAAS7D,GAArC,mBAAO8D,EAAP,KAAeC,EAAf,KAEMC,EAAQ,WACVD,EAAW/D,IAGTiE,EAAoB,SAAC,GAAkB,IAAfC,EAAc,EAAdA,OAE1BH,EAAU,2BAEHD,GAFE,kBAGJI,EAAOC,KAAOD,EAAOE,UAM9B,MAAO,CAAEN,EAAQG,EAAmBD,I,gBCd3BK,GAAc,WAEvB,IAAMZ,EAAWa,cAEjB,EAAoDV,EAAQ,CACxDW,OAAQ,oBACRC,UAAW,WAFf,mBAAQC,EAAR,KAAyBC,EAAzB,KAKA,EAA0Dd,EAAQ,CAC9De,MAAO,OACPC,OAAQ,iBACRC,WAAY,SACZC,WAAY,WAJhB,mBAAQC,EAAR,KAA4BC,EAA5B,KAOQT,EAAsBE,EAAtBF,OAAQC,EAAcC,EAAdD,UAERG,EAA0CI,EAA1CJ,MAAOC,EAAmCG,EAAnCH,OAAQC,EAA2BE,EAA3BF,WAAYC,EAAeC,EAAfD,WAoBnC,OACI,sBAAKG,UAAU,4BAAf,SACI,uBAAKA,UAAU,MAAf,UACI,uBAAKA,UAAU,wBAAf,UACI,0CACA,wBAAMC,SAvBF,SAAEpE,GFpBA,IAAEqE,EAAOC,EEqB3BtE,EAAEuE,iBAEF5B,GFvBoB0B,EEuBEZ,EFvBKa,EEuBGZ,EFtBlC,uCAAO,WAAMf,GAAN,iBAAA6B,EAAA,sEAEgB1D,EAAmB,OAAQ,CAAEuD,QAAOC,YAAY,QAFhE,cAEGG,EAFH,gBAGgBA,EAAKC,OAHrB,QAGGrD,EAHH,QAKMsD,IACLjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAGf2B,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAd9B,2CAAP,yDE0CgB,UACI,sBAAKf,UAAU,aAAf,SACI,wBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAQG,EACR2B,SAAWxB,MAGnB,sBAAKO,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,YACLC,MAAQI,EACR0B,SAAWxB,MAGnB,sBAAKO,UAAU,aAAf,SACI,wBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,kBAMtB,uBAAKa,UAAU,wBAAf,UACI,2CACA,wBAAMC,SAjDC,SAAEpE,GAGrB,GAFAA,EAAEuE,iBAEER,IAAeC,EACf,OAAOgB,IAAKC,KAAK,QAAS,wCAAsC,SFV/C,IAAEZ,EAAOC,EAAUjB,EEaxCV,GFbuB0B,EEaEP,EFbKQ,EEaGP,EFbOV,EEaKQ,EFZjD,uCAAO,WAAOlB,GAAP,iBAAA6B,EAAA,sEACgB1D,EAAmB,WAAY,CAAEuD,QAAOC,WAAUjB,QAAQ,QAD1E,cACGoB,EADH,gBAEgBA,EAAKC,OAFrB,QAEGrD,EAFH,QAIMsD,IACLjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAGf2B,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAb9B,2CAAP,yDEsDgB,UACI,sBAAKf,UAAU,aAAf,SACI,wBACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,QACLC,MAAQO,EACRuB,SAAWlB,MAGnB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,QACLuE,UAAU,eACVgB,YAAY,SACZ9B,KAAK,SACLC,MAAQQ,EACRsB,SAAWlB,MAGnB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,gBACZ9B,KAAK,aACLC,MAAQS,EACRqB,SAAWlB,MAInB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,WACLuE,UAAU,eACVgB,YAAY,0BACZ9B,KAAK,aACLC,MAAQU,EACRoB,SAAWlB,MAInB,sBAAKC,UAAU,aAAf,SACI,wBACIvE,KAAK,SACLuE,UAAU,YACVb,MAAM,+B,SC9HzB+B,GAAS,WAElB,IAAQhC,EAASiC,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAApCkD,KACFV,EAAWa,cAMjB,OACI,uBAAKW,UAAU,kCAAf,UACI,uBAAMA,UAAU,eAAhB,SACMd,IAGN,0BACIc,UAAU,yBACVoB,QAZS,WACjB5C,EAAUD,MASN,UAII,oBAAGyB,UAAU,wBACb,kDCtBHqB,I,MAAgB,SAAC,GAAe,IAAbtD,EAAY,EAAZA,MAEpBuD,EAAgBvD,EAAhBuD,MAAOhD,EAASP,EAATO,KACf,OACI,iCACI,wCAAWgD,EAAX,OACA,uCAAUhD,EAAKY,KAAf,Y,wCCLCqC,GAAc,iBAAO,CAC9B9F,KAAMX,ICOJ0G,GAAe,CACjBC,QAAU,CACRC,IAAwB,MACxBC,KAAwB,MACxBC,MAAwB,OACxBC,OAAwB,OACxBC,YAAwB,OACxBC,UAAwB,0BAG9BC,KAAMC,cAAc,SAEpB,IAAMC,GAAMvE,MAASwE,QAAQ,GAAGC,QAAQ,GAAGC,IAAI,EAAG,SAC5CC,GAAWJ,GAAIK,QAAQF,IAAI,EAAG,SAE9BG,GAAY,CACdlB,MAAO,GACPmB,MAAO,GACP/E,MAAOwE,GAAItE,SACXC,IAAKyE,GAAS1E,UAGL8E,GAAgB,WAEzB,IAAMlE,EAAWa,cACTlE,EAAcgG,aAAY,SAAA5F,GAAK,OAAIA,EAAMD,MAAzCH,UACDD,EAAeiG,aAAY,SAAA5F,GAAK,OAAIA,EAAMG,YAA1CR,YAEP,EAAkC0D,mBAAUsD,GAAItE,UAAhD,mBAAO+E,EAAP,KAAkBC,EAAlB,KACA,EAA8BhE,mBAAU0D,GAAS1E,UAAjD,mBAAOiF,EAAP,KAAgBC,EAAhB,KACA,EAAoClE,oBAAS,GAA7C,mBAAOmE,EAAP,KAAmBC,EAAnB,KACA,EAAoCpE,mBAAU4D,IAA9C,mBAAOS,EAAP,KAAmBC,EAAnB,KAEQ5B,EAA6B2B,EAA7B3B,MAAOmB,EAAsBQ,EAAtBR,MAAO/E,EAAeuF,EAAfvF,MAAOG,EAAQoF,EAARpF,IAI7BsF,qBAAU,WAEFD,EADAhI,GAGesH,MAEpB,CAAEtH,EAAagI,IAElB,IAAMlE,EAAoB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACzBiE,EAAc,2BACPD,GADM,kBAERhE,EAAOC,KAAOD,EAAOE,UAIxBiE,EAAa,WACf5E,EDzD2B,CAC/B/C,KAAMX,ICyDF0D,EAAUR,KACVkF,EAAeV,KA4CnB,OACI,gBAAC,KAAD,CACIa,OAAQlI,EACRmI,eAAgBF,EAChBG,MAAO/B,GACPgC,eAAiB,IACjBxD,UAAU,QACVyD,iBAAiB,cANrB,UASI,oCAAQvI,EAAe,aAAe,YAAtC,OACA,wBACA,wBACI8E,UAAU,YACVC,SAvCS,SAACpE,GAClBA,EAAEuE,iBAEF,IP5C0BrC,EO4CpB2F,EAAc/F,IAAQD,GACtBiG,EAAYhG,IAAQE,GAE1B,OAAI6F,EAAYE,cAAeD,GACpB9C,IAAKC,KAAK,QAAS,wDAAyD,SAGnFQ,EAAMuC,OAAOC,OAAS,EACfd,GAAc,IAIrBxE,EADCtD,GPvDqB6C,EOwDMkF,EPvDpC,uCAAO,WAAOzE,GAAP,iBAAA6B,EAAA,+EAIoBhD,EAAe,UAAD,OAAYU,EAAMjC,IAAOiC,EAAO,OAJlE,cAIOuC,EAJP,gBAKoBA,EAAKC,OALzB,QAKOrD,EALP,QAOWsD,GACNhC,EAAUP,EAAcF,IAExB8C,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAVlC,kDAcCgD,QAAQC,IAAR,MAdD,0DAAP,uDAxC4B,SAAEjG,GAC9B,8CAAO,WAAOS,EAAUyF,GAAjB,uBAAA5D,EAAA,+DAEmB4D,IAAWjI,KAAzB4E,EAFL,EAEKA,IAAK1B,EAFV,EAEUA,KAFV,kBAKoB7B,EAAe,SAAUU,EAAO,QALpD,cAKOuC,EALP,gBAMoBA,EAAKC,OANzB,QAMOrD,EANP,QAQUsD,KACLzC,EAAMjC,GAAKoB,EAAKa,MAAMjC,GACtBiC,EAAMO,KAAO,CACT4F,IAAKtD,EACL1B,QAEJV,EAAUV,EAAaC,KAd5B,kDAkBCgG,QAAQC,IAAR,MAlBD,0DAAP,wDOgGkBG,CAAiBlB,IAG/BD,GAAc,QACdI,MAgBI,UAKI,uBAAKpD,UAAU,aAAf,UACI,yDACA,eAAC,KAAD,CACIiB,SA7DU,SAACpF,GAC3B+G,EAAc/G,GACdqH,EAAc,2BACPD,GADM,IAETvF,MAAO7B,MA0DKsD,MAAOwD,EACP3C,UAAU,eACVoE,OAAO,oBACPC,cAAc,oBAItB,uBAAKrE,UAAU,aAAf,UACI,sDACA,eAAC,KAAD,CACIiB,SAhEQ,SAACpF,GACzBiH,EAAYjH,GACZqH,EAAc,2BACPD,GADM,IAETpF,IAAKhC,MA6DOsD,MAAO0D,EACPyB,QAAU3B,EACV3C,UAAU,eACVoE,OAAO,oBACPC,cAAc,oBAItB,wBACA,uBAAKrE,UAAU,aAAf,UACI,oDACA,wBACIvE,KAAK,OACLuE,UAAS,wBAAqB+C,GAAc,cAC5C/B,YAAY,uBACZ9B,KAAK,QACLqF,aAAa,MACbpF,MAAQmC,EACRL,SAAWjC,IAEf,wBAAOlD,GAAG,YAAYkE,UAAU,uBAAhC,yCAGJ,uBAAKA,UAAU,aAAf,UACI,2BACIvE,KAAK,OACLuE,UAAU,eACVgB,YAAY,QACZwD,KAAK,IACLtF,KAAK,QACLC,MAAQsD,EACRxB,SAAWjC,IAEf,wBAAOlD,GAAG,YAAYkE,UAAU,uBAAhC,yCAGJ,0BACIvE,KAAK,SACLuE,UAAU,oCAFd,UAII,oBAAGA,UAAU,gBACb,uDCnLPyE,GAAY,WAErB,IAAMjG,EAAWa,cAMjB,OACI,yBACIW,UAAU,sBACVoB,QAPe,SAACvF,GACpB2C,EAAU+C,OAIV,SAII,oBAAGvB,UAAU,mBCbZ0E,GAAiB,WAE1B,IAAMlG,EAAWa,cAMjB,OACI,0BACIW,UAAU,4BACVoB,QAPkB,WACtB5C,ET6DJ,uCAAO,WAAOA,EAAUyF,GAAjB,mBAAA5D,EAAA,6DAEKvE,EAAOmI,IAAWvI,SAASR,YAA3BY,GAFL,kBAKoBuB,EAAe,UAAD,OAAYvB,GAAO,GAAI,UALzD,cAKOwE,EALP,gBAMoBA,EAAKC,OANzB,QAMOrD,EANP,QAQWsD,GACNhC,EAAUN,KAEV2C,IAAKC,KAAK,QAAS5D,EAAK6D,IAAK,SAXlC,kDAeCgD,QAAQC,IAAR,MAfD,0DAAP,0DSzDI,UAII,oBAAGhE,UAAU,iBACb,uDCJN2E,GAAYC,aAAgBjH,KAGrBkH,GAAiB,WAE1B,IAAMrG,EAAWa,cACjB,EAAgC8B,aAAY,SAAA5F,GAAK,OAAIA,EAAMG,YAAnDT,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,YACR0F,EAAQO,aAAY,SAAA5F,GAAK,OAAIA,EAAMS,QAAnC4E,IAER,EAAkChC,mBAAUrB,aAAaC,QAAQ,aAAe,SAAhF,mBAAQsH,EAAR,KAAkBC,EAAlB,KAEA5B,qBAAU,WAEN3E,EVqEJ,uCAAO,WAAOA,GAAP,mBAAA6B,EAAA,+EAGoBhD,EAAe,UAHnC,cAGOiD,EAHP,gBAIoBA,EAAKC,OAJzB,OAIOrD,EAJP,OAMOjC,EAASwC,EAAeP,EAAKjC,QAEnCuD,EAAUL,EAAalD,IARxB,kDAWC8I,QAAQC,IAAR,MAXD,0DAAP,yDUnEG,CAACxF,IAoCJ,OACI,uBAAKwB,UAAU,kBAAf,UACI,eAAC,GAAD,IAEA,eAAC,KAAD,CACI2E,UAAWA,GACX1J,OAASA,EACT+J,cAAc,QACdC,YAAY,MACZC,gBAxBa,SAAEnH,EAAOL,EAAOG,EAAKsH,GAU1C,MAAO,CACH5B,MATU,CACV6B,gBAAmBxE,IAAQ7C,EAAMO,KAAK4F,IAAQ,UAAY,UAC1DmB,aAAc,MACdC,QAAS,GACTC,QAAS,QACTC,MAAO,WAkBHC,mBA5CU,SAAC5J,GACnB2C,EAAU+C,OA4CFmE,cAzCU,SAAC7J,GACnB2C,EVDkC,CACtC/C,KAAMX,EACNa,QUD6BE,KAyCjB8J,aAhCS,SAAC9J,GAClB2C,EAAUR,MAgCF4H,YAAa,EACbC,OAxCS,SAAChK,GAClBkJ,EAAYlJ,GACZ0B,aAAakD,QAAQ,WAAY5E,IAuCzBiK,KAAOhB,EACPiB,WAAY,CACRhI,MAAOsD,MAIf,eAAC,GAAD,IAGKnG,GACO,eAAC,GAAD,IAGZ,eAAC,GAAD,Q,4CCzFC8K,GAAe,SAAC,GAItB,IAHHC,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBAEF,OACI,eAAC,IAAD,2BAAYA,GAAZ,IACID,UAAY,SAACE,GAAD,OACNJ,EACM,eAACC,EAAD,eAAeG,IACf,eAAC,IAAD,CAAUC,GAAG,gB,mCCXxBC,GAAc,SAAC,GAIrB,IAHHN,EAGE,EAHFA,gBACWC,EAET,EAFFC,UACGC,EACD,mBACF,OACI,eAAC,IAAD,2BAAYA,GAAZ,IACAD,UAAY,SAACE,GAAD,OACLJ,EAEK,eAAC,IAAD,CAAUK,GAAG,MADb,eAACJ,EAAD,eAAeG,SCAtBG,GAAY,WAErB,IAAMhI,EAAWa,cACjB,EAA0B8B,aAAa,SAAA5F,GAAK,OAAIA,EAAMS,QAA9ChB,EAAR,EAAQA,SAAU4F,EAAlB,EAAkBA,IAQlB,OANAuC,qBAAU,WAEN3E,EZ4BJ,uCAAO,WAAOA,GAAP,iBAAA6B,EAAA,sEACgBhD,EAAgB,cADhC,cACGiD,EADH,gBAEgBA,EAAKC,OAFrB,QAEGrD,EAFH,QAIMsD,IACLjD,aAAakD,QAAQ,QAASvD,EAAKI,OACnCC,aAAakD,QAAQ,mBAAmB,IAAIC,MAAOC,WAEnDnC,EAAUH,EAAM,CACZuC,IAAK1D,EAAK0D,IACV1B,KAAMhC,EAAKgC,SAGfV,EAAUJ,KAbX,2CAAP,yDY1BG,CAACI,IAEAxD,EACQ,4CAKR,eAAC,IAAD,UACI,+BACI,gBAAC,IAAD,WAEI,eAAC,GAAD,CACIyL,OAAK,EACLC,KAAK,SACLP,UAAY/G,GACZ6G,kBAAoBrF,IAGxB,eAAC,GAAD,CACI6F,OAAK,EACLC,KAAK,IACLP,UAAYtB,GACZoB,kBAAoBrF,IAGxB,eAAC,IAAD,CAAU0F,GAAG,cC1CpBK,GAAc,WACvB,OACI,eAAC,IAAD,CAAUtK,MAAQA,EAAlB,SACI,eAAC,GAAD,O,OCHZuK,IAASC,OACL,eAAC,GAAD,IACFC,SAASC,eAAe,U","file":"static/js/main.30b414df.chunk.js","sourcesContent":["export const types = {\r\n    \r\n    uiOpenModal: '[ui] Open modal',\r\n    uiCloseModal: '[ui] Close modal',\r\n\r\n    eventSetActive: '[event] Set active',\r\n    eventLogout: '[event] Logout event',\r\n\r\n    eventStartAddNew: '[event] Start add new',\r\n    eventAddNew: '[event] Add new',\r\n    eventClearActiveEvent : '[event] Clear active event',\r\n    eventUpdate: '[event] Event updated',\r\n    eventDeleted: '[event] Event deleted',\r\n    eventLoaded: '[event] Events loaded',\r\n\r\n    authChecking: '[auth] Checking login state',\r\n    authCheckingFinish: '[auth] Finish checking login state',\r\n    authStartLogin: '[auth] Start login',\r\n    authLogin: '[auth] Login',\r\n    authStartRegister: '[auth] Start register',\r\n    authStartTokenRenew: '[auth] Start token renew',\r\n    authLogout: '[auth] Logout',\r\n\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    checking: true,\r\n    // uid: null,\r\n    // name: null\r\n}\r\n\r\nexport const authReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.authLogin:\r\n            return {\r\n                ...state, \r\n                ...action.payload,\r\n                checking: false\r\n            }\r\n\r\n        case types.authCheckingFinish: \r\n            return {\r\n                ...state,\r\n                checking: false\r\n            }\r\n            \r\n        case types.authLogout: \r\n            return {\r\n                checking: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\n// {\r\n//     id: 'dasgdagsdgdfsgsfh',\r\n//     title: 'Cumpleaños del jefe',\r\n//     start: moment().toDate(), // fecha con moment\r\n//     end: moment().add( 1, 'hours' ).toDate(), //con add le estoy diciendo que sean dos horas dps del inicio\r\n//     notes: 'Comprar el paster',\r\n//     user: {\r\n//         _id: '123',\r\n//         name: 'Fernando'\r\n//     }\r\n// }\r\n\r\nconst initialState = {\r\n    events: [],\r\n    activeEvent: null\r\n}\r\n\r\nexport const calendarReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.eventSetActive:\r\n            return {\r\n                ...state,\r\n                activeEvent: action.payload\r\n            }\r\n\r\n        case types.eventAddNew:\r\n            return {\r\n                ...state,\r\n                events: [ ...state.events, action.payload ]\r\n            }\r\n    \r\n        case types.eventClearActiveEvent: \r\n            return {\r\n                ...state,\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventUpdate:\r\n            return {\r\n                ...state,\r\n                events: state.events.map(\r\n                    e => (e.id === action.payload.id) ? action.payload : e\r\n                )\r\n            }\r\n\r\n        case types.eventDeleted:\r\n            return {\r\n                ...state,\r\n                events: state.events.filter(\r\n                    e => (e.id !== state.activeEvent.id)\r\n                ),\r\n                activeEvent: null\r\n            }\r\n\r\n        case types.eventLoaded:\r\n            return {\r\n                ...state, \r\n                events: [ ...action.payload ]\r\n            }\r\n        \r\n        case types.eventLogout: \r\n            return {\r\n                ...initialState\r\n            }\r\n            \r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from \"../types/types\";\r\n\r\nconst initialState = {\r\n    modalOpen: false,\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiOpenModal:\r\n            return {\r\n                ...state,\r\n                modalOpen: true\r\n            };\r\n        \r\n        case types.uiCloseModal: \r\n            return {\r\n                ...state,\r\n                modalOpen: false\r\n            }\r\n    \r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux'\r\nimport { authReducer } from './authReducer'\r\nimport { calendarReducer } from './calendarReducer'\r\nimport { uiReducer } from './uiReducer'\r\n\r\nexport const rootReducer = combineReducers({\r\n    ui: uiReducer,\r\n    calendar: calendarReducer,\r\n    auth: authReducer\r\n})\r\n","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"../reducers/rootReducer\";\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\nexport const store = createStore(\r\n    rootReducer,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )\r\n)","const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\nconst fetchWithoutToken = ( endpoint, data, method = 'GET' ) => { // el endpoint que quiero llamar: /auth, /events. La data que quiero postear o enviar\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/api/auth o events\r\n\r\n    if( method === 'GET') { // si el metodo es igual a get\r\n        return fetch( url );\r\n    } else {\r\n        return fetch( url, { // se configura el objeto\r\n            method, // es el que recibo y no es 'GET'\r\n            headers: { // Para mi backend estoy trabajando con el formato del content type application JSON, es decir, solo JSON va a recibir\r\n                'Content-type': 'application/json'\r\n            },\r\n            body: JSON.stringify( data ) // se anexa el body como un JSON string\r\n        });\r\n    }\r\n\r\n}\r\n\r\nconst fetchWithToken = ( endpoint, data, method = 'GET' ) => { // el endpoint que quiero llamar: /auth, /events. La data que quiero postear o enviar\r\n\r\n    const url = `${ baseUrl }/${ endpoint }`; // localhost:4000/api/auth o events\r\n    const token = localStorage.getItem('token') || ''; // obtengo el token del localstorage que guardo previamente al hacer login\r\n\r\n    if( method === 'GET') { // si el metodo es igual a get\r\n        return fetch( url, {\r\n            method,\r\n            headers: {\r\n                'x-token': token\r\n            }\r\n        });\r\n    } else { // el post con el token\r\n        return fetch( url, { // se configura el objeto\r\n            method, // es el que recibo y no es 'GET'\r\n            headers: { // Para mi backend estoy trabajando con el formato del content type application JSON, es decir, solo JSON va a recibir\r\n                'Content-type': 'application/json',\r\n                'x-token': token\r\n            },\r\n            body: JSON.stringify( data ) // se anexa el body como un JSON string\r\n        });\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport {\r\n    fetchWithoutToken,\r\n    fetchWithToken\r\n}","import moment from \"moment\";\r\n\r\n\r\nexport const prepareEvents = (events = [] ) => {\r\n    //retorno los eventos transformados\r\n    return events.map(\r\n        (e) => ({\r\n            ...e,\r\n            start: moment( e.start ).toDate(),\r\n            end: moment( e.end ).toDate()\r\n        })\r\n    )\r\n}","import Swal from \"sweetalert2\";\r\nimport { fetchWithToken } from \"../helpers/fetch\";\r\nimport { prepareEvents } from \"../helpers/prepareEvents\";\r\nimport { types } from \"../types/types\";\r\n\r\nexport const eventStartAddNew = ( event ) => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { uid, name } = getState().auth;\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events', event, 'POST');\r\n            const body = await resp.json();\r\n\r\n            if( body.ok ) { // si es true, quiere decir que se inserto en la base de datos\r\n                event.id = body.event.id;\r\n                event.user = {\r\n                    _id: uid,\r\n                    name\r\n                }\r\n                dispatch( eventAddNew( event ) );\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\n// Solo lo disparo unicamente si efectivamente lo grabo en la base de datos\r\nconst eventAddNew = ( event ) => ({\r\n    type: types.eventAddNew,\r\n    payload: event\r\n})\r\n\r\nexport const eventSetActive = (event) => ({\r\n    type: types.eventSetActive,\r\n    payload: event\r\n})\r\n\r\nexport const eventClearActiveEvent = () => ({\r\n    type: types.eventClearActiveEvent\r\n})\r\n\r\nexport const eventStartUpdate = ( event ) => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(`events/${ event.id }`, event, 'PUT'); // 1ero la peticion al url, luego la data que quiero guardar y tercero el metodo\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventUpdated( event ) );\r\n            } else { \r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n}\r\n\r\nconst eventUpdated = ( event ) => ({\r\n    type: types.eventUpdate,\r\n    payload: event\r\n})\r\n\r\nexport const eventStartDelete = () => {\r\n    return async( dispatch, getState ) => {\r\n\r\n        const { id } = getState().calendar.activeEvent;\r\n        try {\r\n            \r\n            const resp = await fetchWithToken(`events/${ id }`, {}, 'DELETE'); // 1ero la peticion al url, luego la data que quiero guardar y tercero el metodo\r\n            const body = await resp.json();\r\n\r\n            if ( body.ok ) {\r\n                dispatch( eventDeleted() );\r\n            } else { \r\n                Swal.fire('Error', body.msg, 'error');\r\n            }\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst eventDeleted = () => ({\r\n    type: types.eventDeleted\r\n})\r\n\r\nexport const eventStartLoading = () => {\r\n    return async( dispatch ) => {\r\n\r\n        try {\r\n            const resp = await fetchWithToken('events');\r\n            const body = await resp.json();\r\n\r\n            const events = prepareEvents( body.events ); // aca transformo las fechas de mis eventos\r\n\r\n            dispatch( eventLoaded( events) );\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}\r\n\r\nconst eventLoaded = (events) => ({\r\n    type: types.eventLoaded,\r\n    payload: events\r\n})\r\n\r\nexport const eventLogout = () => ({\r\n    type: types.eventLogout\r\n})","import Swal from \"sweetalert2\";\r\nimport { fetchWithoutToken, fetchWithToken } from \"../helpers/fetch\"\r\nimport { types } from \"../types/types\";\r\nimport { eventLogout } from \"./events\";\r\n\r\n\r\n\r\nexport const startLogin = ( email, password ) => {\r\n    return async(dispatch) => {\r\n\r\n        const resp = await fetchWithoutToken( 'auth', { email, password }, 'POST');\r\n        const body = await resp.json();\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() ); // para saber cual es la fecha en la que se creo el token y se que tengo dos hs para que funcione. Grabo la fecha, minuto y hora y seg en la que se creo el token y voy a saber cuanto tiempo me falta para que el token expire\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else { // muestro un mensaje de error\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const startRegister = ( email, password, name ) => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithoutToken( 'auth/new', { email, password, name }, 'POST');\r\n        const body = await resp.json(); // se extrae el body\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() ); // para saber cual es la fecha en la que se creo el token y se que tengo dos hs para que funcione. Grabo la fecha, minuto y hora y seg en la que se creo el token y voy a saber cuanto tiempo me falta para que el token expire\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else { // muestro un mensaje de error\r\n            Swal.fire('Error', body.msg, 'error');\r\n        }\r\n    }\r\n}\r\n\r\nexport const startChecking = () => {\r\n    return async( dispatch ) => {\r\n        const resp = await fetchWithToken( 'auth/renew' );\r\n        const body = await resp.json(); // se extrae el body\r\n\r\n        if( body.ok ) {\r\n            localStorage.setItem('token', body.token );\r\n            localStorage.setItem('token-init-date', new Date().getTime() ); // para saber cual es la fecha en la que se creo el token y se que tengo dos hs para que funcione. Grabo la fecha, minuto y hora y seg en la que se creo el token y voy a saber cuanto tiempo me falta para que el token expire\r\n\r\n            dispatch( login({\r\n                uid: body.uid,\r\n                name: body.name\r\n            }) )\r\n        } else { // si el token no es correcto, cancelo el checking\r\n            dispatch( checkingFinish() );\r\n        }\r\n    }\r\n}\r\n\r\nconst checkingFinish = () => ({\r\n    type: types.authCheckingFinish\r\n})\r\n\r\nconst login = ( user ) => ({\r\n    type: types.authLogin,\r\n    payload: user\r\n})\r\n\r\nexport const startLogout = () => {\r\n    return ( dispatch ) => {\r\n\r\n        localStorage.clear(); // esto borra todo del localStorage\r\n        dispatch( eventLogout() );\r\n        dispatch( logout() );\r\n    }\r\n}\r\n\r\nconst logout = () => ({\r\n    type: types.authLogout\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = () => {\r\n        setValues( initialState );\r\n    }\r\n\r\n    const handleInputChange = ( { target } ) => {\r\n        \r\n        setValues({\r\n\r\n            ...values,\r\n            [target.name]: target.value \r\n\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ];\r\n\r\n}","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport Swal from 'sweetalert2';\r\nimport { startLogin, startRegister } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport './login.css';\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [ formLoginValues, handleLoginInputChange ] = useForm({\r\n        lEmail: 'paullee@gmail.com',\r\n        lPassword: '123456'\r\n    });\r\n\r\n    const [ formRegisterValues, handleRegisterInputChange ] = useForm({\r\n        rName: 'Pepe',\r\n        rEmail: 'pepe@gmail.com',\r\n        rPassword1: '123456',\r\n        rPassword2: '123456'\r\n    });\r\n\r\n    const { lEmail, lPassword } = formLoginValues;\r\n\r\n    const { rName, rEmail, rPassword1, rPassword2 } = formRegisterValues;\r\n\r\n    const handleLogin = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( startLogin( lEmail, lPassword ) );\r\n        \r\n    };\r\n\r\n    const handleRegister = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if( rPassword1 !== rPassword2 ) {\r\n            return Swal.fire('Error', 'Las constraseñas deben ser iguales', 'error');\r\n        }\r\n\r\n        dispatch( startRegister( rEmail, rPassword1, rName ) );\r\n        \r\n    };\r\n\r\n    return (\r\n        <div className=\"container login-container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 login-form-1\">\r\n                    <h3>Ingreso</h3>\r\n                    <form onSubmit={ handleLogin }>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"lEmail\"\r\n                                value={ lEmail }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\"\r\n                                name=\"lPassword\"\r\n                                value={ lPassword }\r\n                                onChange={ handleLoginInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\"\r\n                                className=\"btnSubmit\"\r\n                                value=\"Login\" \r\n                            />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <div className=\"col-md-6 login-form-2\">\r\n                    <h3>Registro</h3>\r\n                    <form onSubmit={ handleRegister }>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Nombre\"\r\n                                name=\"rName\"\r\n                                value={ rName }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"email\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Correo\"\r\n                                name=\"rEmail\"\r\n                                value={ rEmail }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Contraseña\" \r\n                                name=\"rPassword1\"\r\n                                value={ rPassword1 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input\r\n                                type=\"password\"\r\n                                className=\"form-control\"\r\n                                placeholder=\"Repita la contraseña\" \r\n                                name=\"rPassword2\"\r\n                                value={ rPassword2 }\r\n                                onChange={ handleRegisterInputChange }\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"form-group\">\r\n                            <input \r\n                                type=\"submit\" \r\n                                className=\"btnSubmit\" \r\n                                value=\"Crear cuenta\" />\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\n\r\nexport const NavBar = () => {\r\n\r\n    const { name } = useSelector(state => state.auth);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() );\r\n    }\r\n\r\n    return (\r\n        <div className=\"navbar navbar-dark bg-dark mb-4\">\r\n            <span className=\"navbar-brand\">\r\n                { name }\r\n            </span>\r\n\r\n            <button \r\n                className=\"btn btn-outline-danger\"\r\n                onClick={ handleLogout }\r\n            >\r\n                <i className=\"fas fa-sign-out-alt\"></i>\r\n                <span> Salir</span>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const CalendarEvent = ({ event }) => {\r\n\r\n    const { title, user } = event;\r\n    return (\r\n        <div>\r\n            <strong> { title } </strong>\r\n            <span>- { user.name } </span>\r\n        </div>\r\n    )\r\n}\r\n","import { types } from \"../types/types\"\r\n\r\n\r\nexport const uiOpenModal = () => ({\r\n    type: types.uiOpenModal\r\n})\r\n\r\nexport const uiCloseModal = () => ({\r\n    type: types.uiCloseModal\r\n})","// ecargado de actulizar y mantener el modal\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport Modal from 'react-modal';\r\nimport DateTimePicker from 'react-datetime-picker';\r\nimport moment from 'moment';\r\nimport Swal from 'sweetalert2';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiCloseModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventStartAddNew, eventStartUpdate } from '../../actions/events';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-50%',\r\n      transform             : 'translate(-50%, -50%)'\r\n    }\r\n};\r\nModal.setAppElement('#root');\r\n\r\nconst now = moment().minutes(0).seconds(0).add(1, 'hours');\r\nconst nowPlus1 = now.clone().add(1, 'hours');\r\n\r\nconst initEvent = {\r\n    title: '',\r\n    notes: '',\r\n    start: now.toDate(),\r\n    end: nowPlus1.toDate()\r\n}\r\n\r\nexport const CalendarModal = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { modalOpen } = useSelector(state => state.ui);\r\n    const {activeEvent} = useSelector(state => state.calendar);\r\n\r\n    const [dateStart, setDateStart] = useState( now.toDate() );\r\n    const [dateEnd, setDateEnd] = useState( nowPlus1.toDate() );\r\n    const [titleValid, setTitleValid] = useState(true);\r\n    const [formValues, setFormValues] = useState( initEvent )\r\n\r\n    const { title, notes, start, end } = formValues;\r\n\r\n    // Necesito un efecto porque cuando selecciono con dobleclick quiero que me aparezca la info de ese evento por defecto. \r\n    // Entonces necesito un efecto que este pendiente de los cambios de mi activeEvent porque cuando los selecciono o doble clickeo, se activa.\r\n    useEffect(() => { // que se dispare esta accion cada vez que cambie el activeEvent\r\n        if( activeEvent ){ // si esta activo el evento\r\n            setFormValues( activeEvent ); // me setea el formValues segun los valores del activeEvent que en el codigo de arriba me lo va a desestructurar y usar en el html\r\n        } else {\r\n            setFormValues( initEvent ); // me lo setea a los valores iniciales luego de eliminar el evento para que no me aparezcan esos valores cuando quiero crear un nuevo evento, para que asi me aparezcan en blanco\r\n        }\r\n    }, [ activeEvent, setFormValues ])\r\n\r\n    const handleInputChange = ({ target }) => {\r\n        setFormValues({\r\n            ...formValues, // copio todos los valores\r\n            [target.name]: target.value // entre corchetes porque quiero computar el nombre de la propiedad\r\n        });\r\n    }\r\n\r\n    const closeModal = () => { // para que se cierre el modal\r\n        dispatch( uiCloseModal() );\r\n        dispatch( eventClearActiveEvent() ); // al salirme del evento, que el activeEvent se vuelva null\r\n        setFormValues( initEvent ); // reinicializa los valores del formulario porque me quedan el del ultimo que haya seleccionado\r\n    }\r\n\r\n    const handleStartDateChange = (e) => {\r\n        setDateStart( e ); // actualizar la fecha cuando el usuario lo haga\r\n        setFormValues({\r\n            ...formValues,\r\n            start: e\r\n        })\r\n    }\r\n\r\n    const handleEndDateChange = (e) => {\r\n        setDateEnd( e );\r\n        setFormValues({\r\n            ...formValues,\r\n            end: e\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const momentStart = moment( start );\r\n        const momentEnd = moment( end );\r\n\r\n        if( momentStart.isSameOrAfter( momentEnd ) ) { // metodo de moment\r\n            return Swal.fire('Error', 'La fecha final debe de ser mayor a la fecha de inicio', 'error');\r\n        }\r\n\r\n        if( title.trim().length < 2 ) {\r\n            return setTitleValid(false);\r\n        }\r\n\r\n        if ( activeEvent ) { // si ya esta creado, va a ser true. caso contrario null es decir false\r\n            dispatch( eventStartUpdate( formValues ) ); // aca se esta actualizando uno ya creado\r\n        } else {\r\n            dispatch( eventStartAddNew(formValues) );\r\n        }\r\n        \r\n        setTitleValid(true);\r\n        closeModal();\r\n\r\n    }\r\n   \r\n    return (\r\n        <Modal\r\n            isOpen={modalOpen}\r\n            onRequestClose={closeModal}\r\n            style={customStyles}\r\n            closeTimeoutMS={ 200 }\r\n            className=\"modal\"\r\n            overlayClassName=\"modal-fondo\"\r\n        >\r\n\r\n            <h1> { (activeEvent) ? 'Edit Event' : 'New Event' } </h1>\r\n            <hr />\r\n            <form \r\n                className=\"container\"\r\n                onSubmit={ handleSubmit }\r\n            >\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora inicio</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleStartDateChange }\r\n                        value={dateStart}\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <label>Fecha y hora fin</label>\r\n                    <DateTimePicker\r\n                        onChange={ handleEndDateChange }\r\n                        value={dateEnd}\r\n                        minDate={ dateStart }\r\n                        className=\"form-control\"\r\n                        format=\"y-MM-dd h:mm:ss a\"\r\n                        amPmAriaLabel=\"Select AM/PM\"\r\n                    />\r\n                </div>\r\n\r\n                <hr />\r\n                <div className=\"form-group\">\r\n                    <label>Titulo y notas</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className={ `form-control ${ !titleValid && 'is-invalid' }` }\r\n                        placeholder=\"Título del evento\"\r\n                        name=\"title\"\r\n                        autoComplete=\"off\"\r\n                        value={ title }\r\n                        onChange={ handleInputChange }\r\n                    />\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Una descripción corta</small>\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                    <textarea \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        placeholder=\"Notas\"\r\n                        rows=\"5\"\r\n                        name=\"notes\"\r\n                        value={ notes }\r\n                        onChange={ handleInputChange }\r\n                    ></textarea>\r\n                    <small id=\"emailHelp\" className=\"form-text text-muted\">Información adicional</small>\r\n                </div>\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-primary btn-block\"\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                    <span> Guardar</span>\r\n                </button>\r\n\r\n            </form>\r\n\r\n        </Modal>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport { uiOpenModal } from '../../actions/ui';\r\n\r\nexport const AddNewFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleClickNew = (e) => {\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-primary fab\"\r\n            onClick={ handleClickNew }\r\n        >\r\n            <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { eventStartDelete } from '../../actions/events';\r\n\r\nexport const DeleteEventFab = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const handleDeleteEvent = () => {\r\n        dispatch( eventStartDelete() );\r\n    }\r\n\r\n    return (\r\n        <button\r\n            className=\"btn btn-danger fab-danger\"\r\n            onClick={ handleDeleteEvent }\r\n        >\r\n            <i className=\"fas fa-trash\"></i>\r\n            <span> Delete Event </span>\r\n        </button>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Calendar, momentLocalizer } from 'react-big-calendar';\r\nimport moment from 'moment';\r\n\r\nimport { NavBar } from '../ui/NavBar';\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css';\r\nimport { CalendarEvent } from './CalendarEvent';\r\nimport { CalendarModal } from './CalendarModal';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { uiOpenModal } from '../../actions/ui';\r\nimport { eventClearActiveEvent, eventSetActive, eventStartLoading } from '../../actions/events';\r\nimport { AddNewFab } from '../ui/AddNewFab';\r\nimport { DeleteEventFab } from '../ui/DeleteEventFab';\r\n\r\nconst localizer = momentLocalizer(moment); // or globalizeLocalizer\r\n\r\n\r\nexport const CalendarScreen = () => { \r\n\r\n    const dispatch = useDispatch();\r\n    const { events, activeEvent } = useSelector(state => state.calendar);\r\n    const { uid } = useSelector(state => state.auth);\r\n\r\n    const [ lastView, setLastView ] = useState( localStorage.getItem('lastView') || 'month'); // cuando cambie, se vaya actualizando\r\n\r\n    useEffect(() => { // se cargan los eventos de la base de datos\r\n        \r\n        dispatch( eventStartLoading() );\r\n        \r\n    }, [dispatch]);\r\n\r\n    const onDoubleClick = (e) => { // cuando alguien haga doble click aparezca un modal\r\n        dispatch( uiOpenModal() );\r\n    }\r\n\r\n    const onSelectEvent = (e) => { // cuando se selecciona\r\n        dispatch( eventSetActive(e) );\r\n    }\r\n\r\n    const onViewChange = (e) => { // se dispara cada vez que se cambia la forma del calendario: mes, semana, dia, agenda\r\n        setLastView(e); // actualiza lastView\r\n        localStorage.setItem('lastView', e); // cuando haga el cambio, se guarda esa info en el local storage y que cuando haga refresh me lo deje en el mismo lugar\r\n        // e es la variable que grabo y lo grabo en la variable lastView del localStorage\r\n    }\r\n\r\n    const onSelectSlot = (e) => {\r\n        dispatch( eventClearActiveEvent() )\r\n    }\r\n\r\n    // esta funcion es una que va a aplicar un determinado estilo al evento del calendario\r\n    const eventStyleGetter = ( event, start, end, isSelected ) => { \r\n\r\n        const style = {\r\n            backgroundColor: ( uid === event.user._id ) ? '#367CF7' : '#465660',\r\n            borderRadius: '0px',\r\n            opacity: 0.8,\r\n            display: 'block',\r\n            color: 'white'\r\n        }\r\n\r\n        return {\r\n            style\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"calendar-screen\">\r\n            <NavBar />\r\n\r\n            <Calendar\r\n                localizer={localizer}\r\n                events={ events }\r\n                startAccessor=\"start\"\r\n                endAccessor=\"end\"\r\n                eventPropGetter={ eventStyleGetter }\r\n                onDoubleClickEvent={ onDoubleClick }\r\n                onSelectEvent={ onSelectEvent }\r\n                onSelectSlot={ onSelectSlot }\r\n                selectable={ true }\r\n                onView={ onViewChange }\r\n                view={ lastView }\r\n                components={{\r\n                    event: CalendarEvent\r\n                }}\r\n            />\r\n\r\n            <AddNewFab />\r\n\r\n            {\r\n                (activeEvent)\r\n                    && (<DeleteEventFab />)\r\n            }\r\n\r\n            <CalendarModal />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated, // me fijo si es true o false\r\n    component: Component, // lo renombro con mayuscula para que haya coherencia con las otras componentes porque es una componente\r\n    ...rest // el resto de las props que recibo\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component={ (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component {...props} /> ) // si es true, en component={<Component y sus props} history, los demas\r\n                    : ( <Redirect to=\"/login\" /> ) // caso contrario, me mando al la ruta del login de nuevo\r\n            )}\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Redirect, Route } from 'react-router';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated, \r\n    component: Component, // lo renombro con mayuscula para que haya coherencia con las otras componentes porque es una componente\r\n    ...rest // el resto de las props que recibo\r\n}) => {\r\n    return (\r\n        <Route { ...rest }\r\n        component={ (props) => (\r\n            ( !isAuthenticated )\r\n                ? ( <Component {...props} /> ) // si es true, en component={<Component y sus props} history, los demas\r\n                : ( <Redirect to=\"/\" /> ) // caso contrario, me mando al la ruta del journal\r\n        )}\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\nimport { startChecking } from '../actions/auth';\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { CalendarScreen } from '../components/calendar/CalendarScreen';\r\nimport { PrivateRoute } from './PrivateRoute';\r\nimport { PublicRoute } from './PublicRoute';\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { checking, uid } = useSelector( state => state.auth );\r\n\r\n    useEffect(() => {\r\n        \r\n        dispatch( startChecking() );\r\n\r\n    }, [dispatch]) // es la unica dependencia, startchecking no porque se encuentra fuera del componente\r\n\r\n    if( checking ) {\r\n        return (<h5>Espere...</h5>);\r\n    }\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div> \r\n                <Switch>\r\n\r\n                    <PublicRoute \r\n                        exact \r\n                        path=\"/login\" \r\n                        component={ LoginScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <PrivateRoute \r\n                        exact \r\n                        path=\"/\" \r\n                        component={ CalendarScreen }\r\n                        isAuthenticated={ !!uid }\r\n                    />\r\n\r\n                    <Redirect to=\"/\"/>\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\nimport { AppRouter } from './router/AppRouter';\r\n\r\n\r\nexport const CalendarApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CalendarApp } from './CalendarApp';\n\nimport './styles.css';\n\nReactDOM.render(\n    <CalendarApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}